name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  # Continuous Integration Job
  ci:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Type check
      run: yarn typecheck

    - name: Build project
      run: yarn build

    - name: Run tests (if available)
      run: |
        if yarn run --json | grep -q '"test"'; then
          yarn test
        else
          echo "No test script found, skipping tests"
        fi

    # Upload build artifacts for deployment
    - name: Upload build artifacts
      if: matrix.node-version == '20.x' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          package.json
          yarn.lock
          ecosystem.config.js
          deploy/
        retention-days: 1

  # Continuous Deployment Job
  deploy:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts

    - name: Deploy to Ubuntu Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /home/ubuntu/asu-dining-menu-bot
          
          # Pull latest changes
          git pull origin main
          
          # Install/update dependencies with Yarn
          yarn install --production --frozen-lockfile
          
          # Build the application
          yarn build
          
          # Restart the application using PM2
          pm2 restart asu-dining-bot || pm2 start ecosystem.config.js
          
          # Save PM2 configuration
          pm2 save
          
          # Show status
          pm2 status asu-dining-bot

  # Health Check Job (optional)
  health-check:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
    - name: Health Check
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd /home/ubuntu/asu-dining-menu-bot
          bash deploy/health-check.sh
